/// Makes an item relatively sized according
/// to a ratio and the screen size
/// @param {number} $width
/// @param {number} $height
/// @example scss - aspect-ratio mixin
///  @include aspect-ratio(1, 0.8);
@mixin aspect-ratio($width, $height) {

  @if (type-of($width) != number) or
      (type-of($height) != number) {
    @error 'hello';
  }

  position: relative;
  overflow: hidden;

  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }

  > *:first-child {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
  }
}


// Button
@mixin button {
    padding: 0.75rem 1rem;
    display:inline-block;
    color: #000;
    border:solid 1px #000;
    background:transparent;
    margin-top:1rem;
    -webkit-appearance: none;
    border-radius: 0;
    @extend .h5;
    &:hover {
      color: #fff;
      border:solid #000 1px;
      background:#000;      
    }
      
}

@mixin activeNav {
    // border-bottom:1px solid #000;
}



// Clearfix
@mixin clearfix {
  &:after,
  &:before
   {
    clear: both;
    content: ' ';
    display: block;
    visibility: hidden;
  }
}


// Vertical Align
@mixin vertical-align {
  &:before
   {
    content: '';
    height: 100%;
    margin-right: -1rem;
    width: 1px;
    display: inline-block;
    vertical-align: middle;
    zoom: 1;    
  }
  & > div,
  & > nav,
  & > h1 {
    display: inline-block;
    vertical-align: middle;
    position: relative;
    z-index:2;
  }
  
}
  


// Media Query Fun
// http://www.sitepoint.com/managing-responsive-breakpoints-sass/
@mixin media($name, $breakpoint_list: $breakpoints) {
  // If the key exists in the map
  @if map-has-key($breakpoint_list, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoint_list, $name))} {
      @content;
    }
  } @else {
    // If the key doesn't exist in the map
    @warn 'Unfortunately, no value with #{$name} could be retrieved from `$breakpoint`. '
        + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

@mixin fontSize($size) {
    font-size: ($size); //Fallback in px
    font-size: mobileRemCalc($size);
    @include media('small-screen') {
      font-size: $size; //Fallback in px
      font-size: remCalc($size);
    } 
}